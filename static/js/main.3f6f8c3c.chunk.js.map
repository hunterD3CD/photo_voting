{"version":3,"sources":["assets/img/chao.jpg","assets/img/angela.jpg","assets/img/janelu.jpg","assets/img/landing-bg.jpg","assets/img/bg.jpg","utils/auth.js","utils/mutations.js","components/SignupForm.js","components/LoginForm.js","components/Navbar.js","components/UploadPhoto.js","components/TeamSection.js","pages/Home.js","components/RatingPhoto.js","utils/queries.js","pages/PhotoVote.js","components/Footer.js","App.js","index.js"],"names":["module","exports","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","LOGIN_USER","gql","ADD_USER","SignupForm","useState","username","email","password","userFormData","setUserFormData","validated","showAlert","setShowAlert","useMutation","addUser","error","handleInputChange","event","target","name","value","handleFormSubmit","a","preventDefault","currentTarget","checkValidity","stopPropagation","variables","data","Auth","login","console","Form","noValidate","onSubmit","Alert","dismissible","onClose","show","variant","Group","Label","htmlFor","Control","type","placeholder","onChange","required","Feedback","Button","disabled","LoginForm","ButtonAppBar","props","React","open","setOpen","handleClose","currentTab","setCurrentTab","Box","sx","flexGrow","AppBar","position","style","background","Toolbar","IconButton","size","edge","color","aria-label","mr","Typography","component","href","loggedIn","onClick","logout","Dialog","aria-labelledby","aria-describedby","DialogContent","Grid","container","map","tab","index","item","key","margin","xs","handleModalClose","Input","styled","display","UploadPhoto","spacing","padding","height","width","borderRadius","boxShadow","justifyContent","alignItems","fontSize","accept","id","multiple","border","fullWidth","TextField","label","TeamSection","Card","maxWidth","CardActionArea","CardMedia","image","team1","alt","CardContent","gutterBottom","Link","team2","team3","inlineStyle","left","top","transform","Home","bgImage","coverImage","strength","sm","md","contactImage","renderLayer","precentage","customIcons","1","icon","2","IconContainer","other","RatingPhoto","Rating","defaultValue","IconContainerComponent","highlightSelectedOnly","max","QUERY_PHOTOS","PhotoVote","useQuery","loading","photos","log","ImageList","cols","gap","lg","itemData","ImageListItem","img","src","srcSet","title","ImageListItemBar","author","Footer","client","ApolloClient","request","operation","setContext","headers","authorization","uri","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f6f8c3c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chao.fc475b1e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/angela.071aaf59.jpg\";","module.exports = __webpack_public_path__ + \"static/media/janelu.a4e96690.jpg\";","module.exports = __webpack_public_path__ + \"static/media/landing-bg.df8fd3ef.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg.e5241971.jpg\";","// use this to decode a token and get the user's information out of it\r\nimport decode from 'jwt-decode';\r\n\r\n// create a new class to instantiate for a user\r\nclass AuthService {\r\n  // get user data\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  // check if user's logged in\r\n  loggedIn() {\r\n    // Checks if there is a saved token and it's still valid\r\n    const token = this.getToken();\r\n    return !!token && !this.isTokenExpired(token); // handwaiving here\r\n  }\r\n\r\n  // check if token is expired\r\n  isTokenExpired(token) {\r\n    try {\r\n      const decoded = decode(token);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        return true;\r\n      } else return false;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getToken() {\r\n    // Retrieves the user token from localStorage\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    // Saves user token to localStorage\r\n    localStorage.setItem('id_token', idToken);\r\n    window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    // Clear user token and profile data from localStorage\r\n    localStorage.removeItem('id_token');\r\n    // this will reload the page and reset the state of the application\r\n    window.location.assign('/');\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const LOGIN_USER = gql`\r\n  mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\n  mutation addUser($username: String!, $password: String!, $email: String!) {\r\n    addUser(username: $username, password: $password, email: $email) {\r\n      token\r\n      user {\r\n        username\r\n        _id\r\n        email\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_PHOTO = gql`\r\n  mutation addPhoto($input: addPhoto) {\r\n    addPhoto(input: $input) {\r\n      Photo {\r\n        _id: ID\r\n        createdAt: String\r\n        username: String\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const VOTE_PHOTO = gql`\r\n  mutation votePhoto($photoId: String!) {\r\n    votePhoto(photoId: $photoId) {\r\n        voteValue: Boolean\r\n      }\r\n    }\r\n  \r\n`;\r\n\r\nexport const COUNT_PHOTO = gql`\r\n  mutation countVote($photoId: String!) {\r\n    countVote(photoId: $photoId) {\r\n      _id\r\n      Photo {\r\n        createdAt: String\r\n        username: String\r\n      }\r\n    }\r\n  }\r\n`;","import React, { useState } from \"react\";\r\nimport { Form, Button, Alert } from \"react-bootstrap\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport Auth from \"../utils/auth\";\r\nimport { ADD_USER } from \"../utils/mutations\";\r\n\r\nconst SignupForm = () => {\r\n  // set initial form state\r\n  const [userFormData, setUserFormData] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  // set state for form validation\r\n  const [validated] = useState(false);\r\n  // set state for alert\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const [addUser, { error }] = useMutation(ADD_USER);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserFormData({ ...userFormData, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // check if form has everything (as per react-bootstrap docs)\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    try {\r\n      const { data } = await addUser({\r\n        variables: { ...userFormData },\r\n      });\r\n      Auth.login(data.addUser.token);\r\n    } catch (err) {\r\n      console.error(error);\r\n      setShowAlert(true);\r\n    }\r\n\r\n    setUserFormData({\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* This is needed for the validation functionality above */}\r\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n        {/* show alert if server response is bad */}\r\n        <Alert\r\n          dismissible\r\n          onClose={() => setShowAlert(false)}\r\n          show={showAlert}\r\n          variant=\"danger\"\r\n        >\r\n          Something went wrong with your signup!\r\n        </Alert>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor=\"username\">Username</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Your username\"\r\n            name=\"username\"\r\n            onChange={handleInputChange}\r\n            value={userFormData.username}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Username is required!\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Your email address\"\r\n            name=\"email\"\r\n            onChange={handleInputChange}\r\n            value={userFormData.email}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Email is required!\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Your password\"\r\n            name=\"password\"\r\n            onChange={handleInputChange}\r\n            value={userFormData.password}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Password is required!\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Button\r\n          disabled={\r\n            !(\r\n              userFormData.username &&\r\n              userFormData.email &&\r\n              userFormData.password\r\n            )\r\n          }\r\n          type=\"submit\"\r\n          variant=\"success\"\r\n        >\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignupForm;","// see SignupForm.js for comments\r\nimport React, { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Form, Button, Alert } from \"react-bootstrap\";\r\n\r\n// import { loginUser } from '../utils/API';\r\nimport { LOGIN_USER } from \"../utils/mutations\";\r\nimport Auth from \"../utils/auth\";\r\n\r\nconst LoginForm = () => {\r\n  const [userFormData, setUserFormData] = useState({ email: \"\", password: \"\" });\r\n  const [login, { error }] = useMutation(LOGIN_USER);\r\n  const [validated] = useState(false);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserFormData({ ...userFormData, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // check if form has everything (as per react-bootstrap docs)\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n    try {\r\n      const { data } = await login({\r\n        variables: { ...userFormData },\r\n      });\r\n      Auth.login(data.login.token);\r\n    } catch (err) {\r\n      console.error(error);\r\n      setShowAlert(true);\r\n    }\r\n\r\n    setUserFormData({\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n        <Alert\r\n          dismissible\r\n          onClose={() => setShowAlert(false)}\r\n          show={showAlert}\r\n          variant=\"danger\"\r\n        >\r\n          Something went wrong with your login credentials!\r\n        </Alert>\r\n        <Form.Group>\r\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Your email\"\r\n            name=\"email\"\r\n            onChange={handleInputChange}\r\n            value={userFormData.email}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Email is required!\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Your password\"\r\n            name=\"password\"\r\n            onChange={handleInputChange}\r\n            value={userFormData.password}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Password is required!\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Button\r\n          disabled={!(userFormData.email && userFormData.password)}\r\n          type=\"submit\"\r\n          variant=\"success\"\r\n        >\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;","import * as React from \"react\";\r\n// import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport SignUpForm from \"./SignupForm\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport Auth from \"../utils/auth\";\r\n// import PhotoVote from \"../pages/PhotoVote\"\r\n\r\n// ----------------------------------------------------MUI------------------------------------------------------\r\nimport {Grid, Box, AppBar, Toolbar, Typography, Button, IconButton, Dialog, DialogContent} from \"@mui/material\";\r\nimport ThumbsUpDownIcon from \"@mui/icons-material/ThumbsUpDown\";\r\nimport VerticalSplitIcon from \"@mui/icons-material/VerticalSplit\";\r\nimport ExitToAppIcon from \"@mui/icons-material/ExitToApp\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\n\r\nconst ButtonAppBar = (props) => {\r\n  // set modal display state\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const tabs = [\"Login\", \"Signup\"];\r\n\r\n  const [currentTab, setCurrentTab] = React.useState(\"Login\");\r\n\r\n  // ---------------------------------------------------JSX---------------------------------------------------------\r\n  return (\r\n    <>\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <AppBar\r\n          position=\"static\"\r\n          style={{\r\n            background: \"linear-gradient(45deg, #FE6B8B 30%, #9198e5 90%)\",\r\n          }}\r\n        >\r\n          <Toolbar>\r\n            <IconButton\r\n              size=\"large\"\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n              sx={{ mr: 2 }}\r\n            >\r\n              <ThumbsUpDownIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n              Photo Voting\r\n            </Typography>\r\n            {/* /////////////////////////////////////////////////////////////// */}\r\n            <HomeIcon />\r\n            <Button color=\"inherit\" href=\"/\">Home</Button>\r\n           \r\n            <VerticalSplitIcon />\r\n            <Button color=\"inherit\" href=\"/photo\">View Photo</Button>\r\n            {/* ////////////////////////////////////////////////////////////////////////////////////////////////// */}\r\n            {/* if user is logged in show logout, if not show login/signup */}\r\n            <ExitToAppIcon />\r\n            {!Auth.loggedIn() ? (\r\n              <>\r\n            <Button onClick={handleOpen} color=\"inherit\">\r\n              Login/Sign Up\r\n            </Button>\r\n            </>\r\n            ) : (\r\n              <Button onClick={() => Auth.logout()}>logout</Button>\r\n            )}\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Box>\r\n      {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\r\n      {/* set modal data up */}\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <DialogContent>\r\n          <Grid container>\r\n            {tabs.map((tab, index) => {\r\n              return (\r\n                <Grid item key={index}>\r\n                  <Button\r\n                    onClick={() => setCurrentTab(tab)}\r\n                    style={{ margin: 0 }}\r\n                  >\r\n                    {tab}\r\n                  </Button>\r\n                </Grid>\r\n              );\r\n            })}\r\n\r\n            <Grid item xs={12}>\r\n              {currentTab === \"Login\" ? (\r\n                <LoginForm handleModalClose={handleClose} />\r\n              ) : (\r\n                <SignUpForm />\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ButtonAppBar;","import React from \"react\";\r\n// import Dropzone from \"react-dropzone\";\r\n\r\n// ----------------------------------------------------MUI------------------------------------------------------\r\nimport { Button, Grid, TextField, Typography } from \"@mui/material\";\r\nimport UploadRoundedIcon from \"@mui/icons-material/UploadRounded\";\r\nimport SendRoundedIcon from \"@mui/icons-material/SendRounded\";\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst Input = styled('input')({\r\n  display: 'none',\r\n});\r\n\r\nconst UploadPhoto = () => {\r\n  const paperStyle = {\r\n    padding: 0,\r\n    height: \"40vh\",\r\n    width: \"70%\",\r\n    margin: 100,\r\n    background: \"white\",\r\n    borderRadius: 8,\r\n    boxShadow: \"15px 15px 10px 1px rgba(255, 105, 135, .3)\",\r\n  };\r\n\r\n  const buttonStyle = {\r\n    background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\r\n    border: 0,\r\n    borderRadius: 8,\r\n    boxShadow: \"0 3px 20px 2px rgba(255, 105, 135, .3)\",\r\n    color: \"white\",\r\n    height: 48,\r\n    padding: \"0 30px\",\r\n  };\r\n\r\n  // ---------------------------------------------------JSX---------------------------------------------------------\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={2}\r\n      style={paperStyle}\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <Typography xs={12} style={{ margin: \"20px\" }}>\r\n        Hey! Wecomle to our website. Upload your nice photo below and share with\r\n        your friends.\r\n      </Typography>\r\n      <Grid item xs={2}>\r\n        <UploadRoundedIcon fontSize=\"large\" />\r\n      </Grid>\r\n      <Grid item xs={9}>\r\n      <label htmlFor=\"contained-button-file\">\r\n      <Input accept=\"image/*\" id=\"contained-button-file\" multiple type=\"file\" />\r\n        <Button style={buttonStyle} type=\"submit\" color=\"primary\" variant=\"contained\" fullWidth component=\"span\">\r\n          Upload\r\n        </Button>\r\n        </label>\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <SendRoundedIcon fontSize=\"large\" />\r\n      </Grid>\r\n      <Grid item xs={9}>\r\n        <TextField\r\n          required\r\n          fullWidth\r\n          id=\"Tag\"\r\n          label=\"Tag your friends here\"\r\n          variant=\"outlined\"\r\n        />\r\n      </Grid>\r\n      <br />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default UploadPhoto;\r\n","import * as React from \"react\";\r\n\r\n// ----------------------------------------------------MUI------------------------------------------------------\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { CardActionArea, Grid, Link } from \"@mui/material\";\r\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\r\n\r\n// import images\r\nimport team1 from \"../assets/img/chao.jpg\";\r\nimport team2 from \"../assets/img/angela.jpg\";\r\nimport team3 from \"../assets/img/janelu.jpg\";\r\n\r\nexport default function TeamSection() {\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={2}\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n    >\r\n      {/* -------------------------------------CARD 1-------------------------------------- */}\r\n      <Card sx={{ maxWidth: 345 }}>\r\n        <CardActionArea>\r\n          <CardMedia component=\"img\" height=\"200\" image={team1} alt=\"hunter\" />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n              Chao Deng\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              Hey, I'm Chao but people can call me Hunter. I worked in Seattle\r\n              for 2 years. I don't have much time for hobbies these days. But in\r\n              the future, I'd like to try pottery. And I start enjoying write\r\n              the code and want to know more about it!\r\n            </Typography>\r\n            <Link href=\"https://github.com/hunterD3CD\">\r\n              <GitHubIcon />{\" \"}\r\n            </Link>\r\n          </CardContent>\r\n        </CardActionArea>\r\n      </Card>\r\n      {/* --------------------------------------CARD 2------------------------------------- */}\r\n      <Card sx={{ maxWidth: 345 }}>\r\n        <CardActionArea>\r\n          <CardMedia component=\"img\" height=\"200\" image={team2} alt=\"Angela\" />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n              Angela Julian\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              Angela is an SF bay native and has worked as a QA engineer at\r\n              companies such as Amazon and Businesswire. She is has two sisters\r\n              who get to choose the photos their family sends to family and\r\n              friends. Her eyes have been closed in every photo card sent out.\r\n            </Typography>\r\n            <Link href=\"https://github.com/angelajulian\">\r\n              <GitHubIcon />{\" \"}\r\n            </Link>\r\n          </CardContent>\r\n        </CardActionArea>\r\n      </Card>\r\n      {/* --------------------------------------CARD 3------------------------------------- */}\r\n      <Card sx={{ maxWidth: 345 }}>\r\n        <CardActionArea>\r\n          <CardMedia component=\"img\" height=\"200\" image={team3} alt=\"Jane\" />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n              Jane Lu\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              Her reason to create this app is not only to help people vote on\r\n              the photos they like, and forever “destroy” the photos they wish\r\n              to bury. Secretly she wants to take this opportunity to see who\r\n              selects “like” on to the photos only him/herself looks awesome and\r\n              others don’t. Like a friendship test. sneaky eh!\r\n            </Typography>\r\n            <Link href=\"https://github.com/JYL-LU\">\r\n              <GitHubIcon />{\" \"}\r\n            </Link>\r\n          </CardContent>\r\n        </CardActionArea>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Parallax } from \"react-parallax\";\r\nimport UploadPhoto from \"../components/UploadPhoto\";\r\nimport TeamSection from \"../components/TeamSection\";\r\n// ----------------------------------------------------MUI------------------------------------------------------\r\n// import { makeStyles } from '@material-ui/core';\r\nimport { Grid} from \"@mui/material\";\r\n// import images\r\nimport coverImage from \"../assets/img/landing-bg.jpg\";\r\nimport contactImage from \"../assets/img/bg.jpg\";\r\n\r\nconst inlineStyle = {\r\n  color: \"#fff\",\r\n  left: \"60%\",\r\n  top: \"10%\",\r\n  position: \"relative\",\r\n  padding: \"20px\",\r\n  transform: \"translate(-50%, -50%)\",\r\n};\r\n\r\nconst Home = () => {\r\n  // ---------------------------------------------------JSX---------------------------------------------------------\r\n  return (\r\n    <>\r\n      {/* -----------------------------------------------PART 1 Upload------------------------------------------- */}\r\n      <Parallax bgImage={coverImage} strength={500}>\r\n        <Grid container>\r\n          <Grid item xs={12} sm={12} md={6}>\r\n            <div style={{ height: 700 }}>\r\n              <h1 style={inlineStyle}>Vote your favorite photo and share!</h1>\r\n              <UploadPhoto />\r\n              <br />\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Parallax>\r\n      <h1>| | |</h1>\r\n\r\n      {/* -----------------------------------------------PART 2 Contact------------------------------------------- */}\r\n      <Parallax\r\n        bgImage={contactImage}\r\n        strength={200}\r\n        renderLayer={(precentage) => (\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              width: \"100px\",\r\n              height: \"100px\",\r\n              borderRadius: \"50%\",\r\n              background: `rgba(255, 123, 23, ${precentage * 0.3})`,\r\n              left: \"50%\",\r\n              top: \"50%\",\r\n              transform: `translate(-50%, -50%) scale(${precentage * 8})`,\r\n            }}\r\n          ></div>\r\n        )}\r\n      >\r\n        <div style={{ height: 700, margin: \"50px\" }}>\r\n          <h1 style={inlineStyle}>Here is our team</h1>\r\n          <br />\r\n          <br />\r\n          <TeamSection />\r\n        </div>\r\n      </Parallax>\r\n      <h1>| | |</h1>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Rating from '@mui/material/Rating';\r\n\r\n\r\nimport ThumbUpOutlinedIcon from '@mui/icons-material/ThumbUpOutlined';\r\nimport ThumbDownOutlinedIcon from '@mui/icons-material/ThumbDownOutlined';\r\n\r\nconst customIcons = {\r\n  1: {\r\n    icon: <ThumbUpOutlinedIcon />,\r\n    label: 'like',\r\n  },\r\n  2: {\r\n    icon: <ThumbDownOutlinedIcon />,\r\n    label: 'dislike',\r\n  },\r\n  \r\n};\r\n\r\nfunction IconContainer(props) {\r\n  const { value, ...other } = props;\r\n  return <span {...other}>{customIcons[value].icon}</span>;\r\n}\r\n\r\nIconContainer.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nconst RatingPhoto = (props) => {\r\n  \r\n  // ---------------------------------------------------JSX---------------------------------------------------------\r\n  return (\r\n    <Rating\r\n      name=\"highlight-selected-only\"\r\n      defaultValue={2}\r\n      IconContainerComponent={IconContainer}\r\n      highlightSelectedOnly\r\n      max={2}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RatingPhoto;","import gql from \"graphql-tag\";\r\n\r\n// export const GET_ME = gql`\r\n//   {\r\n//     me {\r\n//       _id\r\n//       username\r\n//       email\r\n//       Photo {\r\n//         _id: ID\r\n//         createdAt: String\r\n//         username: String\r\n//         voteCount: Int\r\n//         votes: [Vote]\r\n//       }\r\n//     }\r\n//   }\r\n// `;\r\n\r\nexport const QUERY_PHOTOS = gql`\r\nquery photos {\r\n  photos {\r\n    _id\r\n    likes\r\n    username\r\n    voteCount\r\n    dislikes\r\n    votes {\r\n      username\r\n      voteValue\r\n    }\r\n  }\r\n}\r\n`;\r\n","import React from \"react\";\r\nimport RatingPhoto from \"../components/RatingPhoto\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { QUERY_PHOTOS } from \"../utils/queries\";\r\n// ----------------------------------------------------MUI------------------------------------------------------\r\n// import { Grid} from \"@mui/material\";\r\nimport ImageList from \"@mui/material/ImageList\";\r\nimport ImageListItem from \"@mui/material/ImageListItem\";\r\nimport ImageListItemBar from \"@mui/material/ImageListItemBar\";\r\n\r\nimport {Typography } from \"@mui/material\";\r\n\r\nconst PhotoVote = () => {\r\n  const { loading, data } = useQuery(QUERY_PHOTOS);\r\n  const photos = data?.photos || [];\r\n  console.log(\"photodata:\", photos[1]);\r\n  \r\n  \r\n\r\n  // if data isn't here yet, say so\r\n  if (loading) {\r\n    return <h2>LOADING...</h2>;\r\n  }\r\n  // ---------------------------------------------------JSX---------------------------------------------------------\r\n  return (\r\n    <>\r\n      <ImageList\r\n        cols={4}\r\n        gap={8}\r\n        xs={{ width: 500, height: 500 }}\r\n        lg={{ width: 2000, height: 500 }}\r\n      >\r\n        {itemData.map((item,index) => (\r\n          <ImageListItem key={item.img}>\r\n            <img\r\n              src={`${item.img}?w=248&fit=crop&auto=format`}\r\n              srcSet={`${item.img}?w=248&fit=crop&auto=format&dpr=2 2x`}\r\n              alt={item.title}\r\n              loading=\"lazy\"\r\n            />\r\n            <ImageListItemBar\r\n              title={item.title}\r\n              // subtitle={<span>by: {item.author}</span>}\r\n              position=\"below\"\r\n            />\r\n            {/* ----------------------------------- RATING COMPONENT----------------------------------------------- */}\r\n            <RatingPhoto/>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">Vote by: {photos[index].username} </Typography>\r\n          </ImageListItem>\r\n        ))}\r\n\r\n      </ImageList>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PhotoVote;\r\n\r\nconst itemData = [\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1551963831-b3b1ca40c98e\",\r\n    title: \"Breakfast\",\r\n    author: \"@bkristastucchio\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1551782450-a2132b4ba21d\",\r\n    title: \"Burger\",\r\n    author: \"@rollelflex_graphy726\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1522770179533-24471fcdba45\",\r\n    title: \"Camera\",\r\n    author: \"@helloimnik\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1444418776041-9c7e33cc5a9c\",\r\n    title: \"Coffee\",\r\n    author: \"@nolanissac\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1533827432537-70133748f5c8\",\r\n    title: \"Hats\",\r\n    author: \"@hjrc33\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1558642452-9d2a7deb7f62\",\r\n    title: \"Honey\",\r\n    author: \"@arwinneil\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1516802273409-68526ee1bdd6\",\r\n    title: \"Basketball\",\r\n    author: \"@tjdragotta\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1518756131217-31eb79b20e8f\",\r\n    title: \"Fern\",\r\n    author: \"@katie_wasserman\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1597645587822-e99fa5d45d25\",\r\n    title: \"Mushrooms\",\r\n    author: \"@silverdalex\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1567306301408-9b74779a11af\",\r\n    title: \"Tomato basil\",\r\n    author: \"@shelleypauls\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1471357674240-e1a485acb3e1\",\r\n    title: \"Sea star\",\r\n    author: \"@peterlaster\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1589118949245-7d38baf380d6\",\r\n    title: \"Bike\",\r\n    author: \"@southside_customs\",\r\n  },\r\n];\r\n","import * as React from \"react\";\r\n\r\n// ----------------------------------------------------MUI------------------------------------------------------\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Grid } from \"@mui/material\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={2}\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n    >\r\n      <Typography gutterBottom variant=\"subtitle1\" style={{padding: 20}}>\r\n        © 2021 , made with by an awesome team from bootcamp.\r\n      </Typography>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport ApolloClient from \"apollo-boost\";\r\n// ----------------------------------------- COMPONENTS & PAGES -----------------------------------\r\nimport ButtonAppBar from \"./components/Navbar.js\"\r\nimport Home from \"./pages/Home.js\"\r\nimport PhotoVote from \"./pages/PhotoVote\"\r\nimport Footer from \"./components/Footer\"\r\n\r\nconst client = new ApolloClient({\r\n  request: (operation) => {\r\n    const token = localStorage.getItem(\"id_token\");\r\n\r\n    operation.setContext({\r\n      headers: {\r\n        authorization: token ? `Bearer ${token}` : \"\",\r\n      },\r\n    });\r\n  },\r\n  uri: \"/graphql\",\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n    <Router>\r\n      <div>\r\n        <ButtonAppBar />\r\n        <div>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/photo\" component={PhotoVote} />\r\n          </Switch>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    </Router>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}